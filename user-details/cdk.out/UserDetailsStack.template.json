{
 "Resources": {
  "UsersTable9725E9C8": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "userId",
      "AttributeType": "S"
     },
     {
      "AttributeName": "email",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "GlobalSecondaryIndexes": [
     {
      "IndexName": "email-index",
      "KeySchema": [
       {
        "AttributeName": "email",
        "KeyType": "HASH"
       }
      ],
      "Projection": {
       "ProjectionType": "ALL"
      }
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "userId",
      "KeyType": "HASH"
     }
    ],
    "PointInTimeRecoverySpecification": {
     "PointInTimeRecoveryEnabled": true
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersTable/Resource"
   }
  },
  "UsersApi5B3C63A8": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Description": "API for managing users",
    "Name": "Users Service"
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Resource"
   }
  },
  "UsersApiDeploymentC510219Cca379a3329a50dc73aa918caed3f23cc": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "API for managing users",
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "DependsOn": [
    "UsersApiDEFAULT4XX68511030",
    "UsersApiDEFAULT5XXF17ABE98",
    "UsersApiOPTIONS591E1A3E",
    "UsersApiusersuserIdDELETE63DD9618",
    "UsersApiusersuserIdGET25D328B7",
    "UsersApiusersuserIdOPTIONS5B400A6E",
    "UsersApiusersuserIdPUTD31A718D",
    "UsersApiusersuserId6260F033",
    "UsersApiusersGET8A28AB6B",
    "UsersApiusersOPTIONS6F51A89F",
    "UsersApiusersPOST5E883461",
    "UsersApiusers3CE3E29D"
   ],
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Deployment/Resource"
   }
  },
  "UsersApiDeploymentStageprodD8448B80": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "UsersApiDeploymentC510219Cca379a3329a50dc73aa918caed3f23cc"
    },
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/DeploymentStage.prod/Resource"
   }
  },
  "UsersApiOPTIONS591E1A3E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Max-Age": "'300'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "UsersApi5B3C63A8",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/OPTIONS/Resource"
   }
  },
  "UsersApiusers3CE3E29D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "UsersApi5B3C63A8",
      "RootResourceId"
     ]
    },
    "PathPart": "users",
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/Resource"
   }
  },
  "UsersApiusersOPTIONS6F51A89F": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Max-Age": "'300'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "UsersApiusers3CE3E29D"
    },
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/OPTIONS/Resource"
   }
  },
  "UsersApiusersPOSTApiPermissionUserDetailsStackUsersApi6E6D91C7POSTusers06C4C3A5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "createUserC6ED88E6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UsersApi5B3C63A8"
       },
       "/",
       {
        "Ref": "UsersApiDeploymentStageprodD8448B80"
       },
       "/POST/users"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/POST/ApiPermission.UserDetailsStackUsersApi6E6D91C7.POST..users"
   }
  },
  "UsersApiusersPOSTApiPermissionTestUserDetailsStackUsersApi6E6D91C7POSTusers97B1B743": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "createUserC6ED88E6",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UsersApi5B3C63A8"
       },
       "/test-invoke-stage/POST/users"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/POST/ApiPermission.Test.UserDetailsStackUsersApi6E6D91C7.POST..users"
   }
  },
  "UsersApiusersPOST5E883461": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "createUserC6ED88E6",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UsersApiusers3CE3E29D"
    },
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/POST/Resource"
   }
  },
  "UsersApiusersGETApiPermissionUserDetailsStackUsersApi6E6D91C7GETusersE24A3C16": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getUserB196FDAE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UsersApi5B3C63A8"
       },
       "/",
       {
        "Ref": "UsersApiDeploymentStageprodD8448B80"
       },
       "/GET/users"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/GET/ApiPermission.UserDetailsStackUsersApi6E6D91C7.GET..users"
   }
  },
  "UsersApiusersGETApiPermissionTestUserDetailsStackUsersApi6E6D91C7GETusersA8710E8E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getUserB196FDAE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UsersApi5B3C63A8"
       },
       "/test-invoke-stage/GET/users"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/GET/ApiPermission.Test.UserDetailsStackUsersApi6E6D91C7.GET..users"
   }
  },
  "UsersApiusersGET8A28AB6B": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getUserB196FDAE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UsersApiusers3CE3E29D"
    },
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/GET/Resource"
   }
  },
  "UsersApiusersuserId6260F033": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Ref": "UsersApiusers3CE3E29D"
    },
    "PathPart": "{userId}",
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/Resource"
   }
  },
  "UsersApiusersuserIdOPTIONS5B400A6E": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Max-Age": "'300'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "UsersApiusersuserId6260F033"
    },
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/OPTIONS/Resource"
   }
  },
  "UsersApiusersuserIdGETApiPermissionUserDetailsStackUsersApi6E6D91C7GETusersuserId435E2922": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getUserB196FDAE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UsersApi5B3C63A8"
       },
       "/",
       {
        "Ref": "UsersApiDeploymentStageprodD8448B80"
       },
       "/GET/users/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/GET/ApiPermission.UserDetailsStackUsersApi6E6D91C7.GET..users.{userId}"
   }
  },
  "UsersApiusersuserIdGETApiPermissionTestUserDetailsStackUsersApi6E6D91C7GETusersuserId045F91E5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "getUserB196FDAE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UsersApi5B3C63A8"
       },
       "/test-invoke-stage/GET/users/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/GET/ApiPermission.Test.UserDetailsStackUsersApi6E6D91C7.GET..users.{userId}"
   }
  },
  "UsersApiusersuserIdGET25D328B7": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "getUserB196FDAE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UsersApiusersuserId6260F033"
    },
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/GET/Resource"
   }
  },
  "UsersApiusersuserIdPUTApiPermissionUserDetailsStackUsersApi6E6D91C7PUTusersuserIdA55CB251": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "updateUserE2EE0AAD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UsersApi5B3C63A8"
       },
       "/",
       {
        "Ref": "UsersApiDeploymentStageprodD8448B80"
       },
       "/PUT/users/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/PUT/ApiPermission.UserDetailsStackUsersApi6E6D91C7.PUT..users.{userId}"
   }
  },
  "UsersApiusersuserIdPUTApiPermissionTestUserDetailsStackUsersApi6E6D91C7PUTusersuserId9266F577": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "updateUserE2EE0AAD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UsersApi5B3C63A8"
       },
       "/test-invoke-stage/PUT/users/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/PUT/ApiPermission.Test.UserDetailsStackUsersApi6E6D91C7.PUT..users.{userId}"
   }
  },
  "UsersApiusersuserIdPUTD31A718D": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "PUT",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "updateUserE2EE0AAD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UsersApiusersuserId6260F033"
    },
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/PUT/Resource"
   }
  },
  "UsersApiusersuserIdDELETEApiPermissionUserDetailsStackUsersApi6E6D91C7DELETEusersuserId7FD9A5A5": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteUser3C560078",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UsersApi5B3C63A8"
       },
       "/",
       {
        "Ref": "UsersApiDeploymentStageprodD8448B80"
       },
       "/DELETE/users/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/DELETE/ApiPermission.UserDetailsStackUsersApi6E6D91C7.DELETE..users.{userId}"
   }
  },
  "UsersApiusersuserIdDELETEApiPermissionTestUserDetailsStackUsersApi6E6D91C7DELETEusersuserId5EA8FA66": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "deleteUser3C560078",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "UsersApi5B3C63A8"
       },
       "/test-invoke-stage/DELETE/users/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/DELETE/ApiPermission.Test.UserDetailsStackUsersApi6E6D91C7.DELETE..users.{userId}"
   }
  },
  "UsersApiusersuserIdDELETE63DD9618": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "DELETE",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "deleteUser3C560078",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "UsersApiusersuserId6260F033"
    },
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/Default/users/{userId}/DELETE/Resource"
   }
  },
  "UsersApiDEFAULT4XX68511030": {
   "Type": "AWS::ApiGateway::GatewayResponse",
   "Properties": {
    "ResponseParameters": {
     "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
     "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
    },
    "ResponseType": "DEFAULT_4XX",
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/DEFAULT_4XX/Resource"
   }
  },
  "UsersApiDEFAULT5XXF17ABE98": {
   "Type": "AWS::ApiGateway::GatewayResponse",
   "Properties": {
    "ResponseParameters": {
     "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
     "gatewayresponse.header.gatewayresponse.header.Access-Control-Allow-Headers": "'*'"
    },
    "ResponseType": "DEFAULT_5XX",
    "RestApiId": {
     "Ref": "UsersApi5B3C63A8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/UsersApi/DEFAULT_5XX/Resource"
   }
  },
  "createUserServiceRoleB9D8AADE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/createUser/ServiceRole/Resource"
   }
  },
  "createUserServiceRoleDefaultPolicy4F234348": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UsersTable9725E9C8",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "createUserServiceRoleDefaultPolicy4F234348",
    "Roles": [
     {
      "Ref": "createUserServiceRoleB9D8AADE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/createUser/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "createUserC6ED88E6": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "67187f76ff33409c3f9b83d289d6f569074a893c9861a44b0ff89c82a904c9cb.zip"
    },
    "Environment": {
     "Variables": {
      "USERS_TABLE_NAME": {
       "Ref": "UsersTable9725E9C8"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "createUserServiceRoleB9D8AADE",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "createUserServiceRoleDefaultPolicy4F234348",
    "createUserServiceRoleB9D8AADE"
   ],
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/createUser/Resource",
    "aws:asset:path": "asset.67187f76ff33409c3f9b83d289d6f569074a893c9861a44b0ff89c82a904c9cb",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "updateUserServiceRoleFBD34618": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/updateUser/ServiceRole/Resource"
   }
  },
  "updateUserServiceRoleDefaultPolicyB269CE9E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UsersTable9725E9C8",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "updateUserServiceRoleDefaultPolicyB269CE9E",
    "Roles": [
     {
      "Ref": "updateUserServiceRoleFBD34618"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/updateUser/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "updateUserE2EE0AAD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "851f5c99272e1991d5c30ac6a941855e51100635a3ce41127ecbb652bb7b7af6.zip"
    },
    "Environment": {
     "Variables": {
      "USERS_TABLE_NAME": {
       "Ref": "UsersTable9725E9C8"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "updateUserServiceRoleFBD34618",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "updateUserServiceRoleDefaultPolicyB269CE9E",
    "updateUserServiceRoleFBD34618"
   ],
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/updateUser/Resource",
    "aws:asset:path": "asset.851f5c99272e1991d5c30ac6a941855e51100635a3ce41127ecbb652bb7b7af6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "getUserServiceRole4E412205": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/getUser/ServiceRole/Resource"
   }
  },
  "getUserServiceRoleDefaultPolicyC013926F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UsersTable9725E9C8",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "getUserServiceRoleDefaultPolicyC013926F",
    "Roles": [
     {
      "Ref": "getUserServiceRole4E412205"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/getUser/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "getUserB196FDAE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "9e220e815dda74d6f9521de945f6fad31b091d86d9b33204f0dba0631577e44b.zip"
    },
    "Environment": {
     "Variables": {
      "USERS_TABLE_NAME": {
       "Ref": "UsersTable9725E9C8"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "getUserServiceRole4E412205",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "getUserServiceRoleDefaultPolicyC013926F",
    "getUserServiceRole4E412205"
   ],
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/getUser/Resource",
    "aws:asset:path": "asset.9e220e815dda74d6f9521de945f6fad31b091d86d9b33204f0dba0631577e44b",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "deleteUserServiceRole1B1FC2EA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/deleteUser/ServiceRole/Resource"
   }
  },
  "deleteUserServiceRoleDefaultPolicy610299C8": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:PutItem",
        "dynamodb:Query",
        "dynamodb:Scan",
        "dynamodb:UpdateItem"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "UsersTable9725E9C8",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "UsersTable9725E9C8",
             "Arn"
            ]
           },
           "/index/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "deleteUserServiceRoleDefaultPolicy610299C8",
    "Roles": [
     {
      "Ref": "deleteUserServiceRole1B1FC2EA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/deleteUser/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "deleteUser3C560078": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "52f8d575843899a37147d737b07268f12125e69747ec208ed8f7a1cbd40770d5.zip"
    },
    "Environment": {
     "Variables": {
      "USERS_TABLE_NAME": {
       "Ref": "UsersTable9725E9C8"
      }
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "deleteUserServiceRole1B1FC2EA",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x"
   },
   "DependsOn": [
    "deleteUserServiceRoleDefaultPolicy610299C8",
    "deleteUserServiceRole1B1FC2EA"
   ],
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/deleteUser/Resource",
    "aws:asset:path": "asset.52f8d575843899a37147d737b07268f12125e69747ec208ed8f7a1cbd40770d5",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12PQW+DMAyFf0vvIaND2r1l2k7TEN29MsHQFHAQNkII8d+nkCKtO73Pfpb9/KqPb7GODzBxZMomam2hl4uAaRRMfF3KmaBzZaGXHyhaVGlFG6wKeluD4ASzXnJkOfXWuzu+Y9+6uUMS3/1TXQTqbU+AHNmNg8EzMKovlJsrvfmg3X1sDvwZzubIvSPevH+tVbXQFSXoJa0ow6GzzNaR+hjJiIe0op1XZaHTS+7Cd5tmrrVm9mWgVXFyBWYU1icvihN9Hk2D4nOvTzm/R+lHUduc/9FS/RQ/rSh1VNpwPJvl5ugl0cdEx4c7WxsNI4ntUOdBfwFiy2wrowEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "UserDetailsStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "UsersApiEndpointB5FC4B1D": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "UsersApi5B3C63A8"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "UsersApiDeploymentStageprodD8448B80"
      },
      "/"
     ]
    ]
   }
  },
  "ApiEndpoint": {
   "Description": "API Gateway endpoint URL",
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "UsersApi5B3C63A8"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "UsersApiDeploymentStageprodD8448B80"
      },
      "/"
     ]
    ]
   }
  },
  "UsersTableName": {
   "Description": "DynamoDB table name",
   "Value": {
    "Ref": "UsersTable9725E9C8"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}