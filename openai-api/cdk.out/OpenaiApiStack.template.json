{
 "Resources": {
  "PresentationGeneratorServiceRole9AEBD783": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationGenerator/ServiceRole/Resource"
   }
  },
  "PresentationGenerator1A6BBABE": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2f56d2b09618a6207bb8765c9be9933bd103871c7f52ac835ff76b35bed02d3e.zip"
    },
    "Environment": {
     "Variables": {
      "OPENAI_API_KEY": ""
     }
    },
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "PresentationGeneratorServiceRole9AEBD783",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Timeout": 300
   },
   "DependsOn": [
    "PresentationGeneratorServiceRole9AEBD783"
   ],
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationGenerator/Resource",
    "aws:asset:path": "asset.2f56d2b09618a6207bb8765c9be9933bd103871c7f52ac835ff76b35bed02d3e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "PresentationAPIEC0C6624": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Presentation Generator API"
   },
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationAPI/Resource"
   }
  },
  "PresentationAPIDeployment9D8A00BE14f801fa3a953a738f46f005c62709e5": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "PresentationAPIEC0C6624"
    }
   },
   "DependsOn": [
    "PresentationAPIOPTIONSCC243B21",
    "PresentationAPIpresentationOPTIONS88DE1248",
    "PresentationAPIpresentationPOST19927FC0",
    "PresentationAPIpresentationEEFC2154"
   ],
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationAPI/Deployment/Resource"
   }
  },
  "PresentationAPIDeploymentStageprod8370C2DD": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "PresentationAPIDeployment9D8A00BE14f801fa3a953a738f46f005c62709e5"
    },
    "RestApiId": {
     "Ref": "PresentationAPIEC0C6624"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationAPI/DeploymentStage.prod/Resource"
   }
  },
  "PresentationAPIOPTIONSCC243B21": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "PresentationAPIEC0C6624",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "PresentationAPIEC0C6624"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationAPI/Default/OPTIONS/Resource"
   }
  },
  "PresentationAPIpresentationEEFC2154": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "PresentationAPIEC0C6624",
      "RootResourceId"
     ]
    },
    "PathPart": "presentation",
    "RestApiId": {
     "Ref": "PresentationAPIEC0C6624"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationAPI/Default/presentation/Resource"
   }
  },
  "PresentationAPIpresentationOPTIONS88DE1248": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "PresentationAPIpresentationEEFC2154"
    },
    "RestApiId": {
     "Ref": "PresentationAPIEC0C6624"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationAPI/Default/presentation/OPTIONS/Resource"
   }
  },
  "PresentationAPIpresentationPOSTApiPermissionOpenaiApiStackPresentationAPID7E43A68POSTpresentation88AFB6D9": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PresentationGenerator1A6BBABE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PresentationAPIEC0C6624"
       },
       "/",
       {
        "Ref": "PresentationAPIDeploymentStageprod8370C2DD"
       },
       "/POST/presentation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationAPI/Default/presentation/POST/ApiPermission.OpenaiApiStackPresentationAPID7E43A68.POST..presentation"
   }
  },
  "PresentationAPIpresentationPOSTApiPermissionTestOpenaiApiStackPresentationAPID7E43A68POSTpresentationCE446F2D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PresentationGenerator1A6BBABE",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "PresentationAPIEC0C6624"
       },
       "/test-invoke-stage/POST/presentation"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationAPI/Default/presentation/POST/ApiPermission.Test.OpenaiApiStackPresentationAPID7E43A68.POST..presentation"
   }
  },
  "PresentationAPIpresentationPOST19927FC0": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PresentationGenerator1A6BBABE",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "PresentationAPIpresentationEEFC2154"
    },
    "RestApiId": {
     "Ref": "PresentationAPIEC0C6624"
    }
   },
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/PresentationAPI/Default/presentation/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02P0W6DMAxFv6XvwaVD2nvbaW/TKvoBlRs86gEJwo4QQvx7lZRpPN0TX+fafoPDew75DkfJbNVkLd9hviraxuAot7nF7l4hzJ/BWWXvzPnHbflCQ8ci7N1iGDuYS99SNKIuRoobipAKHKMYKeAUbEN6QiGDPdeoNOIEc0mix57T1xU/qG/91JHTWN28rop1GvKCksSHwVLK/CJ9+CqaK/25a3LiZfkvp8ViELs69nwH7YNuuyOfvatY05mXSR/e7Qs4FJDvfoU5G4JT7gjKlz4Br8wWvVUBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "OpenaiApiStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "PresentationAPIEndpoint1C32277C": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "PresentationAPIEC0C6624"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "PresentationAPIDeploymentStageprod8370C2DD"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}